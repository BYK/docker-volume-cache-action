name: 'Save Docker Volumes to Cache'
description: 'Save Docker Volumes to GitHub Actions Cache to improve workflow execution time'
author: 'BYK'
inputs:
  volumes:
    description: 'A list of docker volumes to restore'
    required: true
  key:
    description: 'An explicit key for saving the cache'
    required: true
  upload-chunk-size:
    description: 'The chunk size used to split up large files during upload, in bytes'
    required: false
branding:
  icon: 'archive'
  color: 'gray-dark'
runs:
  using: "composite"
  steps:
    - name: Prepare Docker Volume Caching
      id: prepare_cache
      shell: bash
      env:
        INPUTS_VOLUMES: ${{ inputs.volumes }}
      run: |
        PATHS=""
        while IFS= read -r volume ; do
          if [ -n "$volume" ]; then
            printf -v PATHS "$PATHS\n/var/lib/docker/volumes/$volume"
          fi
        done <<< "$INPUTS_VOLUMES"
        {
          echo 'paths<<EOF'
          echo "$PATHS"
          echo EOF
        } >> "$GITHUB_OUTPUT"
        # Set permissions for docker volumes so we can read them
        sudo chmod o+x /var/lib/docker
        sudo chmod -R o+rx /var/lib/docker/volumes

        # Set tar ownership for it to be able to read
        # From: https://github.com/actions/toolkit/issues/946#issuecomment-1726311681
        sudo chown root /usr/bin/tar && sudo chmod u+s /usr/bin/tar
        # We need to use `--numeric-owner` with `tar` to avoid permission and ownership
        # issues when restoring docker volumes, so hack it (as actions/cache doesn't do this yet)
        sudo mv /usr/bin/tar /usr/bin/tar.orig
        echo 'exec /usr/bin/tar.orig --numeric-owner "$@"' | sudo tee /usr/bin/tar > /dev/null
        sudo chmod +x /usr/bin/tar
        sudo chmod u+sx /usr/bin/tar

    - name: Save Docker Volumes to Cache
      uses: actions/cache/save@v4
      with:
        key: ${{ inputs.key }}
        path: ${{ steps.prepare_cache.outputs.paths }}
        upload-chunk-size: ${{ inputs.upload-chunk-size }}
